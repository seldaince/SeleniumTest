Selenium Class 01

What is software testing?
-- identify the correctness and quality of the application

How many ways we can actually test?
-- manual
-- automation

When do we go for automation testing?
-- after manual testing is passed (before automation)
-- when environment is stable (test environment) making sure the site is working
-- analyze out test suite (everything we are testing) and choose our automation tools

What automation tools do we know about?
-- Selenium, Cucumber, TestNG, JUnit, Katalon Studio, UFT/QTP

Level of testing:
-- unit testing -- developers test
-- integration testing -- testers
-- acceptance testing -- clients
-- system testing -- Mostly DevOps

Types of testing?
-- functional testing
    -- smoke regression sanity
-- non-Functional Testing
    performance testing -- load, or stress, performance of the application in a severe load
    security testing -- how easy is your application to hack

What is Selenium?
-- is a set of tools which helps us to automate web applications. it is mainly used to perform
functional testing

Selenium Components:
Selenium IDE -- integrated development environment
Selenium Grid -- Firefox plugin
Selenium WebDriver
Selenium RC - Remote Control

What is Selenium WebDriver?
-- open (free) source automation tool which allows us to perform actions on a web applications
-- WebDriver is an Interface.

Advantages of Selenium Webdriver:
-- open source
-- works with different browsers and supports cross browsing testing
-- OS independent -- iOS, Windows, Linux
-- works with different programming languages -- java, javascript, ruby, python

Disadvantages of Selenium WebDriver:
-- cannot test desktop applications
-- no technical support
-- no built in reports
-- cannot test images, videos and captchas

Two methods to navigate to url:
get() vs navigate().to()
-- navigate() can go back, forward and refresh
-- get() will wait for the page to fully load whereas navigate() will not
-- get() will not keep the history of the browser whereas navigate() will

Two methods to terminate:
close() vs quit()
-- close() will close the current tab
-- quit() will close the whole browser

Two methods to maximize the browser:
fullscreen() vs maximize()
-- fullscreen() will maximize the whole page and you will not be able to see the control panel
-- maximize() will maximize the browser and you will still be able to see the control panel (back,forward,bookmarks)

other methods:

-- get()
-- getCurrentUrl()
-- getTitle()
-- getCurrent()
-- navigate().to()
-- navigate().back()
-- navigate().forward()
-- navigate().refresh()
-- Thread.sleep ()
-- manage().window().maximize()
-- manage().window().fullscreen()